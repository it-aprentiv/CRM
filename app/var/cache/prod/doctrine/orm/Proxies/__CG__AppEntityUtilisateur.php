<?php

namespace Proxies\__CG__\App\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Utilisateur extends \App\Entity\Utilisateur implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Utilisateur' . "\0" . 'idutilisateur', '' . "\0" . 'App\\Entity\\Utilisateur' . "\0" . 'nomutilisateur', '' . "\0" . 'App\\Entity\\Utilisateur' . "\0" . 'username', '' . "\0" . 'App\\Entity\\Utilisateur' . "\0" . 'passwordOld', '' . "\0" . 'App\\Entity\\Utilisateur' . "\0" . 'password', '' . "\0" . 'App\\Entity\\Utilisateur' . "\0" . 'droit', '' . "\0" . 'App\\Entity\\Utilisateur' . "\0" . 'poste', '' . "\0" . 'App\\Entity\\Utilisateur' . "\0" . 'connecter', '' . "\0" . 'App\\Entity\\Utilisateur' . "\0" . 'debutconnection', '' . "\0" . 'App\\Entity\\Utilisateur' . "\0" . 'finconnection', '' . "\0" . 'App\\Entity\\Utilisateur' . "\0" . 'roles', '' . "\0" . 'App\\Entity\\Utilisateur' . "\0" . 'logs'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Utilisateur' . "\0" . 'idutilisateur', '' . "\0" . 'App\\Entity\\Utilisateur' . "\0" . 'nomutilisateur', '' . "\0" . 'App\\Entity\\Utilisateur' . "\0" . 'username', '' . "\0" . 'App\\Entity\\Utilisateur' . "\0" . 'passwordOld', '' . "\0" . 'App\\Entity\\Utilisateur' . "\0" . 'password', '' . "\0" . 'App\\Entity\\Utilisateur' . "\0" . 'droit', '' . "\0" . 'App\\Entity\\Utilisateur' . "\0" . 'poste', '' . "\0" . 'App\\Entity\\Utilisateur' . "\0" . 'connecter', '' . "\0" . 'App\\Entity\\Utilisateur' . "\0" . 'debutconnection', '' . "\0" . 'App\\Entity\\Utilisateur' . "\0" . 'finconnection', '' . "\0" . 'App\\Entity\\Utilisateur' . "\0" . 'roles', '' . "\0" . 'App\\Entity\\Utilisateur' . "\0" . 'logs'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Utilisateur $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function getIdutilisateur(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getIdutilisateur();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdutilisateur', []);

        return parent::getIdutilisateur();
    }

    /**
     * {@inheritDoc}
     */
    public function getNomutilisateur(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNomutilisateur', []);

        return parent::getNomutilisateur();
    }

    /**
     * {@inheritDoc}
     */
    public function setNomutilisateur(string $nomutilisateur): \App\Entity\Utilisateur
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNomutilisateur', [$nomutilisateur]);

        return parent::setNomutilisateur($nomutilisateur);
    }

    /**
     * {@inheritDoc}
     */
    public function getUsername(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUsername', []);

        return parent::getUsername();
    }

    /**
     * {@inheritDoc}
     */
    public function setUsername(string $username): \App\Entity\Utilisateur
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUsername', [$username]);

        return parent::setUsername($username);
    }

    /**
     * {@inheritDoc}
     */
    public function getPasswordOld(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPasswordOld', []);

        return parent::getPasswordOld();
    }

    /**
     * {@inheritDoc}
     */
    public function setPasswordOld(string $passwordOld): \App\Entity\Utilisateur
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPasswordOld', [$passwordOld]);

        return parent::setPasswordOld($passwordOld);
    }

    /**
     * {@inheritDoc}
     */
    public function getPassword(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPassword', []);

        return parent::getPassword();
    }

    /**
     * {@inheritDoc}
     */
    public function setPassword(string $password): \App\Entity\Utilisateur
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPassword', [$password]);

        return parent::setPassword($password);
    }

    /**
     * {@inheritDoc}
     */
    public function getDroit(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDroit', []);

        return parent::getDroit();
    }

    /**
     * {@inheritDoc}
     */
    public function setDroit(?string $droit): \App\Entity\Utilisateur
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDroit', [$droit]);

        return parent::setDroit($droit);
    }

    /**
     * {@inheritDoc}
     */
    public function getPoste(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPoste', []);

        return parent::getPoste();
    }

    /**
     * {@inheritDoc}
     */
    public function setPoste(string $poste): \App\Entity\Utilisateur
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPoste', [$poste]);

        return parent::setPoste($poste);
    }

    /**
     * {@inheritDoc}
     */
    public function getConnecter(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getConnecter', []);

        return parent::getConnecter();
    }

    /**
     * {@inheritDoc}
     */
    public function setConnecter(int $connecter): \App\Entity\Utilisateur
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setConnecter', [$connecter]);

        return parent::setConnecter($connecter);
    }

    /**
     * {@inheritDoc}
     */
    public function getDebutconnection(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDebutconnection', []);

        return parent::getDebutconnection();
    }

    /**
     * {@inheritDoc}
     */
    public function setDebutconnection(\DateTimeInterface $debutconnection): \App\Entity\Utilisateur
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDebutconnection', [$debutconnection]);

        return parent::setDebutconnection($debutconnection);
    }

    /**
     * {@inheritDoc}
     */
    public function getFinconnection(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFinconnection', []);

        return parent::getFinconnection();
    }

    /**
     * {@inheritDoc}
     */
    public function setFinconnection(\DateTimeInterface $finconnection): \App\Entity\Utilisateur
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFinconnection', [$finconnection]);

        return parent::setFinconnection($finconnection);
    }

    /**
     * {@inheritDoc}
     */
    public function eraseCredentials()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'eraseCredentials', []);

        return parent::eraseCredentials();
    }

    /**
     * {@inheritDoc}
     */
    public function getRoles(): array
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRoles', []);

        return parent::getRoles();
    }

    /**
     * {@inheritDoc}
     */
    public function setRoles(array $roles): \App\Entity\Utilisateur
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRoles', [$roles]);

        return parent::setRoles($roles);
    }

    /**
     * {@inheritDoc}
     */
    public function addRole($role)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addRole', [$role]);

        return parent::addRole($role);
    }

    /**
     * {@inheritDoc}
     */
    public function hasRole($role)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hasRole', [$role]);

        return parent::hasRole($role);
    }

    /**
     * {@inheritDoc}
     */
    public function removeRole($role)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeRole', [$role]);

        return parent::removeRole($role);
    }

    /**
     * {@inheritDoc}
     */
    public function getSalt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSalt', []);

        return parent::getSalt();
    }

    /**
     * {@inheritDoc}
     */
    public function isEqualTo(\Symfony\Component\Security\Core\User\UserInterface $user): bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isEqualTo', [$user]);

        return parent::isEqualTo($user);
    }

    /**
     * {@inheritDoc}
     */
    public function getLogs(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLogs', []);

        return parent::getLogs();
    }

    /**
     * {@inheritDoc}
     */
    public function addLog(\App\Entity\Log $log): \App\Entity\Utilisateur
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addLog', [$log]);

        return parent::addLog($log);
    }

    /**
     * {@inheritDoc}
     */
    public function removeLog(\App\Entity\Log $log): \App\Entity\Utilisateur
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeLog', [$log]);

        return parent::removeLog($log);
    }

}
