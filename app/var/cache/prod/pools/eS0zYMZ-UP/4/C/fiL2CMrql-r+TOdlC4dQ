<?php return [PHP_INT_MAX, static function () { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Query\\ParserResult'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Query\\ParserResult')),
        clone ($p['Doctrine\\ORM\\Query\\Exec\\SingleSelectExecutor'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Query\\Exec\\SingleSelectExecutor')),
        clone ($p['Doctrine\\ORM\\Query\\ResultSetMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Query\\ResultSetMapping')),
    ],
    null,
    [
        'Doctrine\\ORM\\Query\\ParserResult' => [
            '_sqlExecutor' => [
                $o[1],
            ],
            '_resultSetMapping' => [
                $o[2],
            ],
        ],
        'Doctrine\\ORM\\Query\\Exec\\AbstractSqlExecutor' => [
            '_sqlStatements' => [
                1 => 'SELECT DISTINCT l0_.id AS id_0, l0_.id AS id_1 FROM lead l0_ LEFT JOIN 1_collaborateur t1_ ON (t1_.id = l0_.commercial_id) ORDER BY l0_.id DESC LIMIT 500',
            ],
        ],
        'stdClass' => [
            'scalarMappings' => [
                2 => [
                    'id_0' => '_dctrn_id',
                    'id_1' => '_dctrn_ord0',
                ],
            ],
            'typeMappings' => [
                2 => [
                    'id_0' => 'integer',
                    'id_1' => 'integer',
                ],
            ],
        ],
    ],
    $o[0],
    []
); }];
